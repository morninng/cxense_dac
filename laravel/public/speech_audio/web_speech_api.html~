<h1>Speech Recognition</h1>
<div id="area1"></div>
<input id="btn1" type="button" value="音声認識を始める"/>
<select id="select1">
    <option value="ja-JP">日本語</option>
    <option value="en-US">English</option>
</select>


<style>
#area1 {
    width: 90%;
    height: 3em;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
    margin-bottom: 10px;
}
#btn1 {
    background: -webkit-linear-gradient(top,#008dfd 30%,#0370ea 100%);
    color: white;
    text-shadow: 1px 1px 1px #076bd2;
    border-radius: 3px;
    border: 1px solid #076bd2;
    padding: 8px 25px;
    font-weight: 700;
    font-size: 15px;
}
#btn1.select {
    background: -webkit-linear-gradient(top,#f2739e 30%,#f23f7b 100%);
    text-shadow: 1px 1px 1px #f1115c;
    border: 1px solid #f1115c;
}
#select1 {
    width: 200px;
}
</style>



<script>
// 音声認識機能
var recognition;

// 音声認識中か否かのフラグ
var nowRecognition = false;

// 音声認識を開始するメソッド
function start () {
    // 音声認識のインスタンスを作成します
    recognition = new webkitSpeechRecognition();
    // 利用言語を選択します（Chromeでは日本語も使えます）
    recognition.lang = document.querySelector('#select1').value; // en-US or ja-JP
    // 音声認識が終了したら結果を取り出すためのコールバック
    recognition.onresult = function (e) {
        if (e.results.length > 0) {
            var value = e.results[0][0].transcript;
            document.querySelector('#area1').textContent = value;
        }
    };
    // 音声認識開始
    recognition.start();
    nowRecognition = true;
};

// 音声認識を停止するメソッド
function stop () {
    recognition.stop();
    nowRecognition = false;
}

// ボタンアクションを定義
document.querySelector('#btn1').onclick = function () {
    
    // unsupported.
    if (!'webkitSpeechRecognition' in window) {
        alert('Web Speech API には未対応です.');
        return;
    }
    
    
    if (nowRecognition) {
        // 音声認識終了
        stop();
        this.value = '音声認識を始める';
        this.className = '';
    } else {
        // 音声認識開始
        start();
        this.value = '音声認識を止める';
        this.className = 'select';
    }
}

</script>


